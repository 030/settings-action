---
name: settings
description: settings
inputs:
  description:
    description: |
      The description of the GitHub project.
    required: true
  project:
    description: |
      The name of the GitHub project including the owner, e.g,
      030/settings-action.
    required: true
  settings_discussions:
    description: |
      Whether the discussions tab should be disabled or enabled.
    required: true
  settings_delete_branch_on_merge:
    description: |
      Whether a branch should be deleted on merge.
    required: true
  settings_merge_commit:
    description: |
      Whether the 'merge commit' option should be disabled or enabled.
    required: true
  settings_merge_rebase:
    description: |
      Whether the 'merge rebase' option should be disabled or enabled.
    required: true
  settings_merge_squash:
    description: |
      Whether the 'merge squash' option should be disabled or enabled.
    required: true
  settings_projects:
    description: |
      Whether the projects tab should be disabled or enabled.
    required: true
  settings_wiki:
    description: |
      Whether the wiki tab should be disabled or enabled.
    required: true
runs:
  using: 'composite'
  steps:
    - name: display the gh cli version
      run: gh --version
      shell: bash
    - name: add a description for project ${{ inputs.project }}
      run: gh repo edit ${{ inputs.project }} --description="${{ inputs.description }}"
      shell: bash
    - name: delete branch on merge or not for project ${{ inputs.project }}
      run: gh repo edit ${{ inputs.project }} --delete-branch-on-merge=${{ inputs.settings_delete_branch_on_merge }}
      shell: bash
    - name: enable or disable the 'discussions' tab for ${{ inputs.project }}
      run: gh repo edit ${{ inputs.project }} --enable-discussions=${{ inputs.settings_discussions }}
      shell: bash
    - name: enable or disable 'merge rebase' for ${{ inputs.project }}
      run: gh repo edit ${{ inputs.project }} --enable-rebase-merge=${{ inputs.settings_merge_rebase }}
      shell: bash
    - name: enable or disable 'merge squash' for ${{ inputs.project }}
      run: gh repo edit ${{ inputs.project }} --enable-squash-merge=${{ inputs.settings_merge_squash }}
      shell: bash
    # Ensure that at least one of the following settings_merge_x options
    # is true. As the merge request option is true by default and one of them
    # has to be true, the merge_commit option is positioned third.
    - name: enable or disable 'merge commit' for ${{ inputs.project }}
      run: gh repo edit ${{ inputs.project }} --enable-merge-commit=${{ inputs.settings_merge_commit }}
      shell: bash
    - name: enable or disable the 'projects' tab for ${{ inputs.project }}
      run: gh repo edit ${{ inputs.project }} --enable-projects=${{ inputs.settings_projects }}
      shell: bash
    - name: enable or disable the 'wiki' tab for ${{ inputs.project }}
      run: gh repo edit ${{ inputs.project }} --enable-wiki=${{ inputs.settings_wiki }}
      shell: bash

    - name: Set GitHub Path
      run: echo "$GITHUB_ACTION_PATH" >> $GITHUB_PATH
      shell: bash
      env:
        GITHUB_ACTION_PATH: ${{ github.action_path }}
    - name: protect main branch
      run: |
        repositoryId=$(gh repo view --json id -q '.id' "${{ inputs.project }}")
        echo $repositoryId

        branch_to_be_protected="main"
        if gh api repos/${{ inputs.project }}/branches/${branch_to_be_protected}/protection; then
          echo "main branch is protected already. Updating it...";

          # https://docs.github.com/en/rest/branches/branch-protection?apiVersion=2022-11-28#update-branch-protection
          curl \
            --fail \
            --verbose \
            -L \
            -X PUT \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${GH_TOKEN}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ inputs.project }}/branches/${branch_to_be_protected}/protection \
            --data-binary "@${GITHUB_ACTION_PATH}/update-branch-protection-rule.json"
        else
          echo "main branch not protected. Protecting it...";

          gh api graphql \
            -f query="$(cat ${GITHUB_ACTION_PATH}/create-branch-protection-rule.graphql)" \
            -F branchName="${branch_to_be_protected}" \
            -F repositoryId="${repositoryId}"
        fi
      shell: bash
